name: Continuous Integration
on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
    
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Build Docker Test Image
      run: docker build --target test --tag my-test-image .

    - name: Run Docker Test Image + Unit/Integration Tests
      run: docker run my-test-image

    - name: Run Docker Test Image + Dependency Check
      run: docker run --entrypoint poetry my-test-image run safety check
      continue-on-error: true

  job-two:
    name: Deploy Prod
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/M13'

    steps:
    - name: DockerHub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DH_USERNAME }}
        password: ${{ secrets.DH_TOKEN }}

    # - name: Build and push
    #   uses: docker/build-push-action@v5
    #   with:
    #     push: true
    #     tags: rsalhan/m9-exercise:latest
    #     target: production

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Build Docker Prod Image v2
      run: docker build --target production --tag rsalhan/m8-todo-app:prod .

    - name: Push Docker Prod Image v2
      run: docker push rsalhan/m8-todo-app:prod

  terraform:
    name: Terraform Init/Plan/Apply
    runs-on: ubuntu-latest
    needs: job-two

    env:
      # TF_VAR_example: 
      # TF_CLI_ARGS_apply: "-auto-approve"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_OAUTH_CLIENT_ID: ${{ secrets.TF_VAR_OAUTH_CLIENT_ID }}
      TF_VAR_OAUTH_CLIENT_SECRET: ${{ secrets.TF_VAR_OAUTH_CLIENT_SECRET }}
      TF_VAR_SECRET_KEY: ${{ secrets.TF_VAR_SECRET_KEY }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # - name: TF setup
    #   uses: hashicorp/setup-terraform@v1
    #   with: 
    #     terraform_version: latest

    - name: TF Init
      run: terraform init
      
    - name: TF Plan
      run: terraform plan -out=tfplan

    - name: TF Apply
      run: terraform apply -auto-approve tfplan

    - run: curl --fail -dH -X POST $(terraform output -raw webhook_url)
